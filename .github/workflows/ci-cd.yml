name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      ECR_REPO: payroll-app
      CLUSTER: payroll-app-cluster
      SERVICE: payroll-app-service

    steps:
      # 1) Get the code
      - uses: actions/checkout@v4

      # 2) JDK 21 for Maven
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: temurin

      # 3) Cache your ~/.m2
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}

      # 4) Run tests & build JAR
      - name: Build & Test
        run: mvn clean package -B

      # 5) AWS creds for ECR/ECS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # 6) Log in to ECR
      - uses: aws-actions/amazon-ecr-login@v2

      # 7) Build & push both $SHA and “latest”
      - name: Build & Push Docker image
        run: |
          IMAGE_URI=${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO }}
          TAG=${{ github.sha }}
          docker build -t $IMAGE_URI:$TAG .
          docker push $IMAGE_URI:$TAG
          docker tag $IMAGE_URI:$TAG $IMAGE_URI:latest
          docker push $IMAGE_URI:latest

      # 8) Trigger ECS service to pick up the new image
      - name: Deploy to ECS
        run: |
          aws ecs update-service \
            --cluster ${{ env.CLUSTER }} \
            --service ${{ env.SERVICE }} \
            --force-new-deployment
