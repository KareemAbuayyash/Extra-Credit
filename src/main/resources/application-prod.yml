# src/main/resources/application-prod.yml
spring:
  application:
    name: payroll-prod

  # ────────────────────────────────────────────────────────────────
  # 1) PRODUCTION DATASOURCE → POSTGRES ON RDS
  # ────────────────────────────────────────────────────────────────
  datasource:
    url: jdbc:postgresql://payroll-prod-db.chxxo89q9lcl.us-east-1.rds.amazonaws.com:5432/payroll_prod
    driver-class-name: org.postgresql.Driver
    username: payroll_user
    password: SecurePassword123!
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      connection-timeout: 30000
      idle-timeout: 300000

  # ────────────────────────────────────────────────────────────────
  # 2) JPA / HIBERNATE FOR POSTGRES (PROD)
  # ────────────────────────────────────────────────────────────────
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: validate   # NEVER modify schema in production
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        jdbc:
          batch_size: 25

  # ────────────────────────────────────────────────────────────────
  # 3) Production MAIL (pulled from environment variables)
  # ────────────────────────────────────────────────────────────────
  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

# ────────────────────────────────────────────────────────────────
# 4) SWAGGER / OPENAPI FOR PRODUCTION
# ────────────────────────────────────────────────────────────────
springdoc:
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
  api-docs:
    enabled: true
    path: /v3/api-docs

# ────────────────────────────────────────────────────────────────
# 5) JWT (SHORT EXPIRATION IN PROD)
# ────────────────────────────────────────────────────────────────
security:
  jwt:
    secret: ${JWT_SECRET}
    expiration: 1800000   # 30 minutes

# ────────────────────────────────────────────────────────────────
# 6) LOGGING – Minimal in Production
# ────────────────────────────────────────────────────────────────
logging:
  level:
    com.example.payroll: WARN
    org.springframework.security: ERROR
    root: ERROR

# ────────────────────────────────────────────────────────────────
# 7) ACTUATOR – Minimal Endpoints in Prod
# ────────────────────────────────────────────────────────────────
management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: never

# ────────────────────────────────────────────────────────────────
# 8) SERVER SETTINGS (prod)
# ────────────────────────────────────────────────────────────────
server:
  port: ${SERVER_PORT:8080}
  compression:
    enabled: true
  error:
    include-stacktrace: never
